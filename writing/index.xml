<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Writings on Marcus Olsson</title><link>https://marcus.se.net/writing/</link><description>Recent content in Writings on Marcus Olsson</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 21 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://marcus.se.net/writing/index.xml" rel="self" type="application/rss+xml"/><item><title>6 tips for improving your Grafana plugin before you publish</title><link>https://marcus.se.net/6-tips-for-improving-your-grafana-plugin-before-you-publish/</link><pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate><guid>https://marcus.se.net/6-tips-for-improving-your-grafana-plugin-before-you-publish/</guid><description>Are you putting the final touches on your plugin before you submit it to the Grafana plugin page? In this article, I’ll share a few tips for how to add that extra polish to your plugins.
Read the entire article at Grafana Labs.</description></item><item><title>Learn Grafana: Share query results between panels to reduce load time</title><link>https://marcus.se.net/share-results-between-panels/</link><pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/share-results-between-panels/</guid><description>As you add more panels to your dashboard, more requests are being made, potentially leading to your dashboard taking longer to load. While you can limit the data requested in each query, one of the best ways to reduce the loading time is to reduce the number of requests being made to the data source.
Read the entire article at Grafana Labs.</description></item><item><title>Beginner-friendly issues</title><link>https://marcus.se.net/beginner-friendly-issues/</link><pubDate>Mon, 28 Sep 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/beginner-friendly-issues/</guid><description>One of the first pieces of advice that aspiring contributors get when looking to contribute to their first open source project is to search for “beginner-friendly issues”. By marking these issues as beginner-friendly, they serve as entry points for anyone who wants to get involved with the project. You’ll see beginner-friendly issues labeled with tags like:
good-first-issue beginner-friendly easy-fix Creating a set of beginner-friendly issues signals that your project encourages external contributions, but how do you know which issues to label as beginner-friendly?</description></item><item><title>Popular community plugins that can improve your Grafana dashboards</title><link>https://marcus.se.net/popular-community-plugins/</link><pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/popular-community-plugins/</guid><description>Read the entire article at Grafana Labs.</description></item><item><title>Learn Grafana: How to build a scatter plot plugin in Grafana 7.0</title><link>https://marcus.se.net/build-a-scatterplot/</link><pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/build-a-scatterplot/</guid><description>Read the entire article at Grafana Labs.</description></item><item><title>Plugin showcase: The hourly heatmap panel, built on Grafana's new plugin platform</title><link>https://marcus.se.net/hourly-heatmap-panel/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/hourly-heatmap-panel/</guid><description>Read the entire article at Grafana Labs.</description></item><item><title>Learn Grafana: How to automatically repeat rows and panels in dynamic dashboards</title><link>https://marcus.se.net/repeat-rows-and-panels/</link><pubDate>Tue, 09 Jun 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/repeat-rows-and-panels/</guid><description>Read the entire article at Grafana Labs.</description></item><item><title>WFH tips: Slack hacks that will make you more productive</title><link>https://marcus.se.net/slack-hacks/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/slack-hacks/</guid><description>Read the entire article at Grafana Labs.</description></item><item><title>Learn Grafana: How to use dual axis graphs</title><link>https://marcus.se.net/how-to-use-dual-axis-graphs/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://marcus.se.net/how-to-use-dual-axis-graphs/</guid><description>Read the entire article at Grafana Labs.</description></item><item><title>Pro Tips: Dashboard Navigation Using Links</title><link>https://marcus.se.net/dashboard-navigation-using-links/</link><pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate><guid>https://marcus.se.net/dashboard-navigation-using-links/</guid><description>Read the entire article at Grafana Labs.</description></item><item><title>Adding context and options to your Go client package</title><link>https://marcus.se.net/adding-context-and-options-to-your-go-client-package/</link><pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate><guid>https://marcus.se.net/adding-context-and-options-to-your-go-client-package/</guid><description>Read the entire article at Medium or http.tv4.se.</description></item><item><title>Writing a Go client for your RESTful API</title><link>https://marcus.se.net/writing-a-client-package/</link><pubDate>Wed, 22 Feb 2017 00:00:00 +0000</pubDate><guid>https://marcus.se.net/writing-a-client-package/</guid><description>Read the entire article at Medium or http.tv4.se.</description></item><item><title>Notes on my GolangUK 2016 talk</title><link>https://marcus.se.net/gouk16-notes/</link><pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate><guid>https://marcus.se.net/gouk16-notes/</guid><description>“A sample application will lead people to think that this is the only way you should do it.” This is a fair argument, and a difficult one to dispute. Since business applications like these are typically not made public, many developers will never see many of these applications outside their own organization. The sample application is made to showcase one possible way of structuring your application using the principles I mentioned in my talk.</description></item><item><title>Building an enterprise service in Go</title><link>https://marcus.se.net/building-an-enterprise-service/</link><pubDate>Thu, 18 Aug 2016 00:00:00 +0000</pubDate><guid>https://marcus.se.net/building-an-enterprise-service/</guid><description>Watch the talk on YouTube.</description></item><item><title>Domain Driven Design in Go: Part 3</title><link>https://marcus.se.net/go-ddd-part-3/</link><pubDate>Wed, 23 Mar 2016 00:00:00 +0000</pubDate><guid>https://marcus.se.net/go-ddd-part-3/</guid><description>Read the entire article at Citerus.</description></item><item><title>Domain Driven Design in Go: Part 2</title><link>https://marcus.se.net/go-ddd-part-2/</link><pubDate>Sat, 20 Feb 2016 00:00:00 +0000</pubDate><guid>https://marcus.se.net/go-ddd-part-2/</guid><description>Read the entire article at Citerus.</description></item><item><title>Domain Driven Design in Go</title><link>https://marcus.se.net/go-ddd/</link><pubDate>Fri, 18 Dec 2015 00:00:00 +0000</pubDate><guid>https://marcus.se.net/go-ddd/</guid><description>Read the entire article at Citerus.</description></item><item><title>Events and explosions in a distributed system</title><link>https://marcus.se.net/events-and-explosions/</link><pubDate>Sat, 13 Jun 2015 00:00:00 +0000</pubDate><guid>https://marcus.se.net/events-and-explosions/</guid><description>As much as some people would like to think, the world is not synchronized to your personal system clock. Things are happening concurrently all around us without you even knowing about it. The world is a infinitely complex distributed system that consists of an enormous amount of sub-systems, constantly interacting with each other. I would even argue that the communication between ourselves and those other systems is what makes it worth waking up in the morning.</description></item><item><title>Circuit breaking using hystrix-go</title><link>https://marcus.se.net/hystrix-go-intro/</link><pubDate>Sat, 09 May 2015 00:00:00 +0000</pubDate><guid>https://marcus.se.net/hystrix-go-intro/</guid><description>For those of you who are not familiar with circuit breaking, imagine that you are developing a service which in turn makes requests to an external service. Regardless of whether that service is within your control or not, you need to consider what would happen when it becomes unavailable, because it most definitely will.
If you are not careful, your precious service will grind to a halt while waiting for your growing number of requests to complete.</description></item><item><title>Event Storming - Ett effektivt sätt att utforska affärsprocesser</title><link>https://marcus.se.net/event-storming/</link><pubDate>Tue, 04 Nov 2014 00:00:00 +0000</pubDate><guid>https://marcus.se.net/event-storming/</guid><description>Read the entire article at Citerus.</description></item><item><title>Thoughts on DDD in Go</title><link>https://marcus.se.net/thoughts-on-ddd-in-go/</link><pubDate>Fri, 10 Oct 2014 00:00:00 +0000</pubDate><guid>https://marcus.se.net/thoughts-on-ddd-in-go/</guid><description>Given the simple yet expressive syntax of Go, it should allow me to really focus on expressing the business logic, the ubiquitous language of a domain. Inspired by Paul Rayner&amp;rsquo;s work on porting the DDD Sample App to Ruby, I felt compelled to start working on my own port of the application, using the Go programming language.
Since Go is still object-oriented in a minimal sort of way, it was fairly easy to just rewrite all the Java classes to Go.</description></item></channel></rss>